{"version":3,"sources":["context.jsx","components/Header.jsx","components/Note.jsx","components/Notes.jsx","components/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["notesContext","createContext","NotesProvider","children","useState","id","text","notes","setNotes","itemToEdit","setItemToEdit","Provider","value","deleteNote","filter","note","findNote","item","find","saveEditedNote","editedTask","map","Header","useContext","className","length","Note","i","aria-hidden","onClick","Notes","Footer","setNote","useEffect","onSubmit","e","preventDefault","newId","prevNotes","console","log","type","name","onChange","target","required","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAEaA,EAAeC,0BAEfC,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAEnBC,mBAAS,CACjC,CAAEC,GAAI,EAAGC,KAAM,YACf,CAAED,GAAI,EAAGC,KAAM,gBACf,CAAED,GAAI,EAAGC,KAAM,iBAL4B,mBAEtCC,EAFsC,KAE/BC,EAF+B,OAOTJ,mBAAS,MAPA,mBAOtCK,EAPsC,KAO1BC,EAP0B,KA4B7C,OACE,cAACV,EAAaW,SAAd,CACEC,MAAK,aACHL,QACAC,WACAK,WAvBa,SAAAR,GACjBG,EAASD,EAAMO,QAAO,SAAAC,GAAI,OAAIA,EAAKV,KAAOA,OAuBtCW,SAnBW,SAAAX,GACf,IAAMY,EAAOV,EAAMW,MAAK,SAAAH,GAAI,OAAKA,EAAKV,KAAOA,EAAKU,EAAKT,KAAO,QAC9DI,EAAcO,IAkBVR,aACAU,eAfiB,SAACd,EAAIC,GAC1B,IAAMc,EAAab,EAAMc,KAAI,SAAAN,GAAI,OAC/BA,EAAKV,KAAOA,EAAK,CAAEC,OAAMD,MAAOU,KAElCP,EAASY,IAYLV,iBAPG,gBAQHA,GATJ,SAYGP,K,MC1BQmB,MAbf,WAAmB,IACTf,EAAUgB,qBAAWvB,GAArBO,MAER,OACE,sBAAKiB,UAAU,SAAf,UACE,oBAAIA,UAAU,eAAd,+BACA,oBAAIA,UAAU,qBAAd,SACE,mDAAsBjB,EAAMkB,gB,YCuBrBC,MA9Bf,YAA6B,IAAbnB,EAAY,EAAZA,MAAY,KAALoB,EAEUJ,qBAAWvB,IAApCa,EAFoB,EAEpBA,WAAYG,EAFQ,EAERA,SAOlB,OACE,sBAAKQ,UAAU,iBAAf,UACE,gCACGjB,EAAMoB,EAAI,EADb,MACmBpB,EAAMQ,KAAKT,QAE9B,sBAAKkB,UAAU,oBAAf,UACE,mBACEA,UAAU,wBACVI,cAAY,OACZC,QAAS,kBAAMb,EAAST,EAAMQ,KAAKV,OAErC,mBACEmB,UAAU,cACVI,cAAY,OACZC,QAAS,kBAlBIxB,EAkBeE,EAAMQ,KAAKV,QAjB7CQ,EAAWR,GADQ,IAAAA,YCcRyB,MAhBf,WAAkB,IACRvB,EAAUgB,qBAAWvB,GAArBO,MAIR,OACE,qBAAKiB,UAAU,kBAAf,SACoB,IAAjBjB,EAAMkB,OACH,WACAlB,EAAMc,KAAI,SAACN,EAAMY,GACf,OAAO,cAAC,EAAD,CAAMpB,MAAO,CAAEQ,OAAMY,MAAUZ,EAAKV,U,aC8CxC0B,MA3Df,WAAmB,IAAD,EAOZR,qBAAWvB,GALbO,EAFc,EAEdA,MACAC,EAHc,EAGdA,SACAC,EAJc,EAIdA,WACAU,EALc,EAKdA,eACAT,EANc,EAMdA,cANc,EAUQN,mBAAS,IAVjB,mBAUTW,EAVS,KAUHiB,EAVG,KAwChB,OARAC,qBAAU,WAEND,EADiB,OAAfvB,EACMA,EAAWH,KAEX,MAET,CAACG,IAGF,qBAAKe,UAAWf,EAAa,oBAAsB,mBAAnD,SACE,uBAAMyB,SA7BW,SAAAC,GAEnB,GADAA,EAAEC,iBACiB,OAAf3B,EAAqB,CACvB,IAAM4B,EAAyB,IAAjB9B,EAAMkB,OAAe,EAAIlB,EAAMA,EAAMkB,OAAS,GAAGpB,GAAK,EACpEG,GAAS,SAAA8B,GAAS,4BAAQA,GAAR,CAAmB,CAAEjC,GAAIgC,EAAO/B,KAAMS,QACxDiB,EAAQ,SAERO,QAAQC,IAAIzB,EAAMN,EAAWJ,IAC7Bc,EAAeV,EAAWJ,GAAIU,GAC9BL,EAAc,OAoBgBc,UAAU,2BAAxC,UACE,uBACEiB,KAAK,GACLC,KAAK,OACL9B,MAAOG,EACP4B,SApBoB,SAAAR,GAC1BH,EAAQG,EAAES,OAAOhC,QAoBXiC,UAAQ,EACRrB,UAAU,kBAEZ,wBAAQA,UAAU,MAAMiB,KAAK,SAA7B,SACGhC,EAAa,QAAU,oBCpCnBqC,MAZf,WACE,OACE,qBAAKtB,UAAU,OAAf,SACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UCJOuB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fd5a5ac5.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\n\nexport const notesContext = createContext();\n\nexport const NotesProvider = ({ children }) => {\n  //Initial state and functionto update the state\n  const [notes, setNotes] = useState([\n    { id: 0, text: \"Wash Car\" },\n    { id: 1, text: \"Do groceries\" },\n    { id: 3, text: \"Learn react\" }\n  ]);\n  const [itemToEdit, setItemToEdit] = useState(null);\n\n  //Delete Note\n  const deleteNote = id => {\n    setNotes(notes.filter(note => note.id !== id));\n  };\n\n  //Find data about item to edit\n  const findNote = id => {\n    const item = notes.find(note => (note.id === id ? note.text : null));\n    setItemToEdit(item);\n  };\n\n  //Save the edited note\n  const saveEditedNote = (id, text) => {\n    const editedTask = notes.map(note =>\n      note.id === id ? { text, id } : note\n    );\n    setNotes(editedTask);\n  };\n\n  return (\n    <notesContext.Provider\n      value={{\n        notes,\n        setNotes,\n        deleteNote,\n        findNote,\n        itemToEdit,\n        saveEditedNote,\n        setItemToEdit,\n        setItemToEdit\n      }}\n    >\n      {children}\n    </notesContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport \"./header.css\";\n\n//import context\nimport { notesContext } from \"../context\";\n\nfunction Header() {\n  const { notes } = useContext(notesContext);\n\n  return (\n    <div className=\"header\">\n      <h1 className=\"header__logo\">Notes Application</h1>\n      <h2 className=\"header__notesCount\">\n        <strong>Total Notes: {notes.length}</strong>\n      </h2>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { useContext, useEffect } from \"react\";\nimport \"./note.css\";\n\n//import context\nimport { notesContext } from \"../context\";\n\nfunction Note({ notes, i }) {\n  //context\n  let { deleteNote, findNote } = useContext(notesContext);\n\n  //Handle note delete\n  const handleDelete = id => {\n    deleteNote(id);\n  };\n\n  return (\n    <div className=\"note container\">\n      <div>\n        {notes.i + 1} . {notes.note.text}\n      </div>\n      <div className=\"note__actionIcons\">\n        <i\n          className=\"fa fa-pencil-square-o\"\n          aria-hidden=\"true\"\n          onClick={() => findNote(notes.note.id)}\n        ></i>\n        <i\n          className=\"fa fa-trash\"\n          aria-hidden=\"true\"\n          onClick={() => handleDelete(notes.note.id)}\n        ></i>\n      </div>\n    </div>\n  );\n}\n\nexport default Note;\n","import React, { useContext, useEffect } from \"react\";\nimport \"./notes.css\";\n\n//component\nimport Note from \"./Note\";\n\n//Consume context\nimport { notesContext } from \"../context\";\n\nfunction Notes() {\n  const { notes } = useContext(notesContext);\n\n  //Use effect\n\n  return (\n    <div className=\"notes container\">\n      {notes.length === 0\n        ? \"No Tasks\"\n        : notes.map((note, i) => {\n            return <Note notes={{ note, i }} key={note.id} />;\n          })}\n    </div>\n  );\n}\n\nexport default Notes;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport \"./footer.css\";\n\n//Context\nimport { notesContext } from \"../context\";\n\nfunction Footer() {\n  const {\n    notes,\n    setNotes,\n    itemToEdit,\n    saveEditedNote,\n    setItemToEdit\n  } = useContext(notesContext);\n\n  //Local states and functions\n  const [note, setNote] = useState(\"\");\n\n  //Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (itemToEdit === null) {\n      const newId = notes.length === 0 ? 0 : notes[notes.length - 1].id + 1;\n      setNotes(prevNotes => [...prevNotes, { id: newId, text: note }]);\n      setNote(\"\");\n    } else {\n      console.log(note, itemToEdit.id);\n      saveEditedNote(itemToEdit.id, note);\n      setItemToEdit(null);\n    }\n  };\n\n  //Handle change\n  const handleNewNoteChange = e => {\n    setNote(e.target.value);\n  };\n\n  //Use effect\n  useEffect(() => {\n    if (itemToEdit !== null) {\n      setNote(itemToEdit.text);\n    } else {\n      setNote(\"\");\n    }\n  }, [itemToEdit]);\n\n  return (\n    <div className={itemToEdit ? \"footer__editMode \" : \"footer container\"}>\n      <form onSubmit={handleSubmit} className=\"footer__form form-inline\">\n        <input\n          type=\"\"\n          name=\"note\"\n          value={note}\n          onChange={handleNewNoteChange}\n          required\n          className=\"form-control \"\n        />\n        <button className=\"btn\" type=\"submit\">\n          {itemToEdit ? \" save\" : \"Add notes\"}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Footer;\n","import \"./App.css\";\n\n//Context\nimport { NotesProvider } from \"./context\";\n\n//Components\nimport Header from \"./components/Header\";\nimport Notes from \"./components/Notes\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"app \">\n      <NotesProvider>\n        <Header />\n        <Notes />\n        <Footer />\n      </NotesProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"font-awesome/css/font-awesome.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n// import \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}